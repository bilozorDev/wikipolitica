/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const CountriesLazyImport = createFileRoute('/countries')()
const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()
const ExecutiveVicePresidentLazyImport = createFileRoute(
  '/executive/vice-president',
)()
const ExecutivePresidentLazyImport = createFileRoute('/executive/president')()

// Create/Update Routes

const CountriesLazyRoute = CountriesLazyImport.update({
  id: '/countries',
  path: '/countries',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/countries.lazy').then((d) => d.Route))

const AboutLazyRoute = AboutLazyImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const ExecutiveVicePresidentLazyRoute = ExecutiveVicePresidentLazyImport.update(
  {
    id: '/executive/vice-president',
    path: '/executive/vice-president',
    getParentRoute: () => rootRoute,
  } as any,
).lazy(() =>
  import('./routes/executive/vice-president.lazy').then((d) => d.Route),
)

const ExecutivePresidentLazyRoute = ExecutivePresidentLazyImport.update({
  id: '/executive/president',
  path: '/executive/president',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/executive/president.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/countries': {
      id: '/countries'
      path: '/countries'
      fullPath: '/countries'
      preLoaderRoute: typeof CountriesLazyImport
      parentRoute: typeof rootRoute
    }
    '/executive/president': {
      id: '/executive/president'
      path: '/executive/president'
      fullPath: '/executive/president'
      preLoaderRoute: typeof ExecutivePresidentLazyImport
      parentRoute: typeof rootRoute
    }
    '/executive/vice-president': {
      id: '/executive/vice-president'
      path: '/executive/vice-president'
      fullPath: '/executive/vice-president'
      preLoaderRoute: typeof ExecutiveVicePresidentLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/countries': typeof CountriesLazyRoute
  '/executive/president': typeof ExecutivePresidentLazyRoute
  '/executive/vice-president': typeof ExecutiveVicePresidentLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/countries': typeof CountriesLazyRoute
  '/executive/president': typeof ExecutivePresidentLazyRoute
  '/executive/vice-president': typeof ExecutiveVicePresidentLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/countries': typeof CountriesLazyRoute
  '/executive/president': typeof ExecutivePresidentLazyRoute
  '/executive/vice-president': typeof ExecutiveVicePresidentLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/countries'
    | '/executive/president'
    | '/executive/vice-president'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/countries'
    | '/executive/president'
    | '/executive/vice-president'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/countries'
    | '/executive/president'
    | '/executive/vice-president'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AboutLazyRoute: typeof AboutLazyRoute
  CountriesLazyRoute: typeof CountriesLazyRoute
  ExecutivePresidentLazyRoute: typeof ExecutivePresidentLazyRoute
  ExecutiveVicePresidentLazyRoute: typeof ExecutiveVicePresidentLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AboutLazyRoute: AboutLazyRoute,
  CountriesLazyRoute: CountriesLazyRoute,
  ExecutivePresidentLazyRoute: ExecutivePresidentLazyRoute,
  ExecutiveVicePresidentLazyRoute: ExecutiveVicePresidentLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/countries",
        "/executive/president",
        "/executive/vice-president"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/countries": {
      "filePath": "countries.lazy.tsx"
    },
    "/executive/president": {
      "filePath": "executive/president.lazy.tsx"
    },
    "/executive/vice-president": {
      "filePath": "executive/vice-president.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
